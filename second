# -----------------------------
# CANCELLATIONS — WEEKENDS
# -----------------------------

  measure: cancelled_past_weekend {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Past Weekend"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} IN ('Cancelled (MiM)', 'Cancelled (No Fee)', 'Cancelled (Fee Due)')
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 0 DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) - 2 DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_past_weekend_no_fee {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Past Weekend (No Fee)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (No Fee)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 0 DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) - 2 DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_past_weekend_fee_due {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Past Weekend (Fee Due)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (Fee Due)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 0 DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) - 2 DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_two_past_weekends {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Two Past Weekends"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} IN ('Cancelled (MiM)', 'Cancelled (No Fee)', 'Cancelled (Fee Due)')
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 7) DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 5) DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_two_past_weekends_fee_due {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Two Past Weekends (Fee Due)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (Fee Due)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 7) DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 5) DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_two_past_weekends_no_fee {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Two Past Weekends (No Fee)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (No Fee)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 7) DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 5) DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_three_past_weekends_fee_due {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Three Past Weekends (Fee Due)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (Fee Due)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 14) DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 12) DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_three_past_weekends_no_fee {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Three Past Weekends (No Fee)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (No Fee)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 14) DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 12) DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_four_past_weekends_fee_due {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Four Past Weekends (Fee Due)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (Fee Due)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 21) DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 19) DAY)
         THEN ${appointments.id}
       END ;;
  }

  measure: cancelled_four_past_weekends_no_fee {
    group_label: "Data – Measures"
    type: count_distinct
    label: "Cancelled – Four Past Weekends (No Fee)"
    value_format_name: decimal_0
    sql: CASE
         WHEN ${appointments.status_display} = 'Cancelled (No Fee)'
          AND DATE(${appointments.updated_raw}) BETWEEN
              DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 21) DAY)
              AND DATE_SUB(CURRENT_DATE(), INTERVAL (EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + 19) DAY)
         THEN ${appointments.id}
       END ;;
  }
