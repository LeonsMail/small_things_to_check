explore: operations_performance {
  label: "Operations Performance"
  description: "Explore focused on tracking case lifecycle and operational KPIs (e.g. booking, lab, reporting stages)."
  view_name: cases_operations

  join: appointments {
    type: left_outer
    sql_on: ${cases_operations.id} = ${appointments.case_id} ;;
    relationship: one_to_many
  }

  # Users (as Collector) – join via appointments.collector_id -> users.id
  join: collector {
    from: users
    type: left_outer
    relationship: many_to_one
    sql_on: ${appointments.collector_id} = ${collector.id} ;;
    view_label: "People – Users"
  }

  # (Optional) Users (as Account Manager) – enable if you have a field on cases/appointments
  # Uncomment and set the correct key (examples below).
  # join: account_manager {
  #   from: users
  #   type: left_outer
  #   relationship: many_to_one
  #   sql_on: ${cases_operations.account_manager_user_id} = ${account_manager.id} ;;
  #   view_label: "People – Users"
  # }

  join: tests {
    type: left_outer
    sql_on: ${cases_operations.id} = ${tests.parent_id} ;;
    relationship: one_to_many
  }

  join: samples {
    type: left_outer
    sql_on: ${cases_operations.id} = ${samples.case_id} ;;
    relationship: one_to_many
  }

  join: drug_alcohol_results {
    type: left_outer
    sql_on: ${tests.id} = ${drug_alcohol_results.test_id} ;;
    relationship: one_to_many
  }

  join: mim_samples {
    type: left_outer
    sql_on: ${cases_operations.id} = ${mim_samples.case_id} ;;
    relationship: one_to_many
  }
}